import{_ as i,c as r,b as e,d as t,w as s,a as l,e as a,r as o,o as d}from"./app.a0c4e4e4.js";const C=JSON.parse('{"title":"Unnecessary Abstraction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Penyebab Smell","slug":"penyebab-smell"},{"level":2,"title":"Contoh","slug":"contoh"},{"level":2,"title":"Masalah","slug":"masalah"},{"level":2,"title":"Penyelesaian","slug":"penyelesaian"}],"relativePath":"girish/abstraction/unnecessary/index.md"}'),c={name:"girish/abstraction/unnecessary/index.md"},u=l('<h1 id="unnecessary-abstraction" tabindex="-1">Unnecessary Abstraction <a class="header-anchor" href="#unnecessary-abstraction" aria-hidden="true">#</a></h1><p>Smell ini terjadi ketika ada class yang dibuat padahal tidak dibutuhkan.</p><p>Smell ini mirip dengan speculative generality Martin Fowler.</p><h2 id="penyebab-smell" tabindex="-1">Penyebab Smell <a class="header-anchor" href="#penyebab-smell" aria-hidden="true">#</a></h2><ul><li><strong>Procedural thinking in object-oriented languages</strong>: developer belum terbiasa dengan paradigma OOP sehingga salah dalam melakukan desain class.</li><li><strong>Over-engineering</strong>: developer membuat desain yang sebenarnya tidak dibutuhkan/overkill, alias sok ide.</li></ul><h2 id="contoh" tabindex="-1">Contoh <a class="header-anchor" href="#contoh" aria-hidden="true">#</a></h2><h2 id="masalah" tabindex="-1">Masalah <a class="header-anchor" href="#masalah" aria-hidden="true">#</a></h2>',7),h=a("Di package before, terdapat "),b=a("RedButton](before/RedButton.java) dan [BlueButton"),_=a(" yang sebenarnya hanya menentukan background class javax.swing.JButton. Selain menentukan background, kedua class tersebut tidak memiliki behavior lain."),g=e("h2",{id:"penyelesaian",tabindex:"-1"},[a("Penyelesaian "),e("a",{class:"header-anchor",href:"#penyelesaian","aria-hidden":"true"},"#")],-1),m=a("Terlalu berlebihan bila sampai kita melakukan inheritance hanya untuk membedakan warna. Warna background sudah cukup diwakilkan oleh atribut di dalam JButton yang bisa diatur menggunakan "),p=e("code",null,"setBackground()",-1),k=a(". Kedua class RedButton dan BlueButton bisa dihapus. Perhatikan "),y=a("ButtonTest"),f=a(" di package after.");function v(B,x,P,S,T,j){const n=o("github-url");return d(),r("div",null,[u,e("p",null,[h,t(n,{to:"before/BlueButton.java"},{default:s(()=>[b]),_:1}),_]),g,e("p",null,[m,p,k,t(n,{to:"after/ButtonTest.java"},{default:s(()=>[y]),_:1}),f])])}var N=i(c,[["render",v]]);export{C as __pageData,N as default};
