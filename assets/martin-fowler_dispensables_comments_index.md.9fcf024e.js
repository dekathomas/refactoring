import{_ as s,c as t,b as o,d as l,w as i,a as e,e as a,r,o as p}from"./app.34f80447.js";const j=JSON.parse('{"title":"Comments","description":"","frontmatter":{},"headers":[{"level":2,"title":"Penjelasan Smell","slug":"penjelasan-smell"},{"level":2,"title":"Penyelesaian","slug":"penyelesaian"}],"relativePath":"martin-fowler/dispensables/comments/index.md"}'),c={name:"martin-fowler/dispensables/comments/index.md"},d=e(`<h1 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-hidden="true">#</a></h1><p><a href="https://sourcemaking.com/refactoring/smells/comments" target="_blank" rel="noopener noreferrer">sourcemaking</a></p><h2 id="penjelasan-smell" tabindex="-1">Penjelasan Smell <a class="header-anchor" href="#penjelasan-smell" aria-hidden="true">#</a></h2><p>Nama method atau atribut haruslah sudah self-explain tanpa harus diberi comment. Begitu juga logic flow di dalam fungsi. Bila logic flow perlu dijelaskan, dapat dipertimbangkan code tersebut sebagai bagian dari smell Long Method dan perlu di-extract.</p><p>Comment boleh diberikan sebagai dokumentasi. Contohnya untuk bahasa pemrograman Java, digunakan <a href="https://www.tutorialspoint.com/java/java_documentation.htm" target="_blank" rel="noopener noreferrer">Javadoc</a> menggunakan <code>/** */</code> sebagai dokumentasi. Penggunaan <code>//</code> untuk single line atau <code>/* */</code> untuk multiline dihindari.</p><div class="language-java"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* The HelloWorld program implements an application that</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* simply displays &quot;Hello World!&quot; to the standard output.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;">  John Doe</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#F78C6C;font-style:italic;">@version</span><span style="color:#676E95;font-style:italic;"> 1.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#F78C6C;font-style:italic;">@since</span><span style="color:#676E95;font-style:italic;">   2020-03-20 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,6),m=a("Pada contoh "),u=a("MenuPrinter.java"),h=a(", terdapat banyak komentar."),_=e('<p>Lebih parahnya, terdapat hidden-side-effect pada fungsi <code>printMenu</code>. Di komentar diatas menu, tertulis bahwa fungsi ini melakukan print kemudian scan (terjadi <a href="https://en.wikipedia.org/wiki/Cohesion_(computer_science)" target="_blank" rel="noopener noreferrer">temporal cohesion</a>). Sedangkan nama fungsi hanya <code>printMenu</code> saja. Tentu saja ini menyesatkan programmer lain yang akan memakai fungsi ini.</p><h2 id="penyelesaian" tabindex="-1">Penyelesaian <a class="header-anchor" href="#penyelesaian" aria-hidden="true">#</a></h2><p>Dilakukan <a href="https://sourcemaking.com/refactoring/extract-method" target="_blank" rel="noopener noreferrer">extract method</a> pada bagian-bagian di dalam fungsi, dan dilakukan <a href="https://sourcemaking.com/refactoring/rename-method" target="_blank" rel="noopener noreferrer">rename method</a> pada fungsi <code>printMenu</code> menjadi <code>printMenuAndGetInput</code>.</p>',3);function f(y,g,k,b,C,A){const n=r("github-url");return p(),t("div",null,[d,o("p",null,[m,l(n,{to:"before/MenuPrinter.java"},{default:i(()=>[u]),_:1}),h]),_])}var v=s(c,[["render",f]]);export{j as __pageData,v as default};
