import{_ as o,c as i,b as e,d as n,w as l,a as t,e as a,r,o as p}from"./app.34f80447.js";const Q=JSON.parse('{"title":"Switch Statements","description":"","frontmatter":{},"headers":[{"level":2,"title":"Penjelasan Smell","slug":"penjelasan-smell"},{"level":2,"title":"Penyelesaian","slug":"penyelesaian"},{"level":2,"title":"Tambahan","slug":"tambahan"},{"level":2,"title":"Revisi Martin Fowler","slug":"revisi-martin-fowler"},{"level":2,"title":"ShapeFactory","slug":"shapefactory"}],"relativePath":"martin-fowler/oo-abusers/switch-statements/index.md"}'),c={name:"martin-fowler/oo-abusers/switch-statements/index.md"},d=t('<h1 id="switch-statements" tabindex="-1">Switch Statements <a class="header-anchor" href="#switch-statements" aria-hidden="true">#</a></h1><p><a href="https://sourcemaking.com/refactoring/smells/switch-statements" target="_blank" rel="noopener noreferrer">sourcemaking</a></p><h2 id="penjelasan-smell" tabindex="-1">Penjelasan Smell <a class="header-anchor" href="#penjelasan-smell" aria-hidden="true">#</a></h2><p>Terdapat pemakaian switch atau if-else untuk menentukan operasi pada variasi tipe-tipe tertentu.</p><p>Tidak semua switch atau if-else itu berbahaya. Perlu dipertimbangkan apakah akan terjadi violasi terhadap OCP (<a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle" target="_blank" rel="noopener noreferrer">Open Closed Principle</a>).</p>',5),h=a("Lihat class "),u=a("ShapePrinter.java"),D=a(" dan "),y=a("CharNeededCounter.java"),F=a("."),_=t(`<div class="language-java"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equalsIgnoreCase</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">square</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equalsIgnoreCase</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">triangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Kedua class tersebut akan melanggar OCP. Bayangkan bila ada tipe <code>Shape</code> baru yang perlu dibuat, tentu saja akan bertambah lagi <code>if</code> di masing-masing ShapePrinter dan CharNeededCounter.</p><p>Misal bertambah logic shape <code>Circle</code>. Violasi OCP terjadi di 2 class tersebut.</p><div class="language-java"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equalsIgnoreCase</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">square</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equalsIgnoreCase</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">triangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">shape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equalsIgnoreCase</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">circle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Di dalam contoh ini, if-else square dan triangle ada di 2 class. Pada kondisi nyata bila hal ini dibiarkan terjadi, if-else square dan triangle akan terus beranak-pinak bila ada kebutuhan logic lain.</p><p>Semakin sedikit kita menggunakan if-else di dalam code, maka akan semakin baik. Bahkan ada orang yang membuat campaign untuk ini: <a href="https://francescocirillo.com/pages/anti-if-campaign" target="_blank" rel="noopener noreferrer">Anti-IF Campaign</a>.</p><h2 id="penyelesaian" tabindex="-1">Penyelesaian <a class="header-anchor" href="#penyelesaian" aria-hidden="true">#</a></h2><p>Untuk contoh kasus ini, kita melakukan tahapan berikut:</p><ol><li><a href="https://sourcemaking.com/refactoring/replace-type-code-with-subclasses" target="_blank" rel="noopener noreferrer">Replace Type Code with Subclasses</a></li></ol>`,9),m=a("Kita memiliki dua type code. "),g=e("code",null,"square",-1),k=a(" dan "),C=e("code",null,"triangle",-1),f=a(". Oleh karena itu, kita buat class "),b=a("Shape.java"),A=a(" sebagai abstract class yang memiliki fungsi "),S=e("code",null,"charNeeded",-1),v=a(" dan "),w=e("code",null,"print",-1),j=a(", lalu "),T=a("Triangle.java"),q=a(" dan "),P=a("Square.java"),x=a(" meng-extends class "),I=e("code",null,"Shape",-1),N=a("."),V=t('<ol start="2"><li><a href="https://sourcemaking.com/refactoring/replace-conditional-with-polymorphism" target="_blank" rel="noopener noreferrer">Replace Conditional with Polymorphism</a></li></ol><p>Setelah class <code>Square</code> dan <code>Triangle</code> sudah terbentuk. Logic print dari <code>ShapePrinter</code> dan logic menghitung karakter dari <code>CharNeededCounter</code> dipindahkan ke masing-masing class.</p><hr><p>Dengan begini, bila ada jenis baru, misalkan <code>Circle</code>, kita tinggal extends dari class <code>Shape</code>.</p><h2 id="tambahan" tabindex="-1">Tambahan <a class="header-anchor" href="#tambahan" aria-hidden="true">#</a></h2><h2 id="revisi-martin-fowler" tabindex="-1">Revisi Martin Fowler <a class="header-anchor" href="#revisi-martin-fowler" aria-hidden="true">#</a></h2><p>Switch Statements adalah code smell yang dibuat Fowler di buku edisi pertamanya. Di buku edisi kedua, beliau meniadakan code smell ini. Beliau membuat smell baru bernama <strong>Repeated Switches</strong>. Beliau ingin lebih menekankan if-else yang perlu diberantas adalah if-else yang berstruktur sama/mirip dan sering muncul di beberapa tempat. Contohnya di contoh kasus ini if-else square dan triangle muncul dua kali.</p><h2 id="shapefactory" tabindex="-1">ShapeFactory <a class="header-anchor" href="#shapefactory" aria-hidden="true">#</a></h2>',8),E=a("User tetap akan meng-input string melalui console. Oleh karena itu, kita perlu menyiapkan sebuah class "),O=a("Factory"),B=a(" untuk membuat class Shape dari string yang diinput."),R=e("p",null,[a("Harusnya Anda menyadari bahwa terjadi violasi OCP disini. Bila class "),e("code",null,"Circle"),a(" dibuat, maka if di Factory bertambah. Hal ini dimaklumi karena OCP hanya dilanggar satu kali saja di dalam Factory (tidak akan dilanggar lagi di tempat lain) dan memang terpaksa dilakukan karena input dari user adalah string. Ibaratkan Factory disini berperan sebagai anti-corruption layer.")],-1),$=e("p",null,[a("Di beberapa bahasa pemrograman, ada cara spesifik untuk mengakali menghilangkan if-else pada class Factory, contohnya untuk Java: "),e("a",{href:"https://www.javacodegeeks.com/2014/10/factory-without-if-else.html",target:"_blank",rel:"noopener noreferrer"},"https://www.javacodegeeks.com/2014/10/factory-without-if-else.html"),a(".")],-1);function M(H,J,K,L,U,z){const s=r("github-url");return p(),i("div",null,[d,e("p",null,[h,n(s,{to:"before/ShapePrinter.java"},{default:l(()=>[u]),_:1}),D,n(s,{to:"before/CharNeededCounter.java"},{default:l(()=>[y]),_:1}),F]),_,e("p",null,[m,g,k,C,f,n(s,{to:"after/Shape.java"},{default:l(()=>[b]),_:1}),A,S,v,w,j,n(s,{to:"after/Shape.java"},{default:l(()=>[T]),_:1}),q,n(s,{to:"after/Square.java"},{default:l(()=>[P]),_:1}),x,I,N]),V,e("p",null,[E,n(s,{to:"after/ShapeFactory"},{default:l(()=>[O]),_:1}),B]),R,$])}var W=o(c,[["render",M]]);export{Q as __pageData,W as default};
