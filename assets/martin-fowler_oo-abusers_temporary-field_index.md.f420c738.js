import{_ as o,c as r,b as s,d as n,w as l,a as t,e as a,r as p,o as i}from"./app.34f80447.js";const V=JSON.parse('{"title":"Temporary Field","description":"","frontmatter":{},"headers":[{"level":2,"title":"Penjelasan Smell","slug":"penjelasan-smell"},{"level":2,"title":"Penyelesaian","slug":"penyelesaian"}],"relativePath":"martin-fowler/oo-abusers/temporary-field/index.md"}'),c={name:"martin-fowler/oo-abusers/temporary-field/index.md"},d=t('<h1 id="temporary-field" tabindex="-1">Temporary Field <a class="header-anchor" href="#temporary-field" aria-hidden="true">#</a></h1><p><a href="https://sourcemaking.com/refactoring/smells/temporary-field" target="_blank" rel="noopener noreferrer">sourcemaking</a></p><h2 id="penjelasan-smell" tabindex="-1">Penjelasan Smell <a class="header-anchor" href="#penjelasan-smell" aria-hidden="true">#</a></h2><p>Terdapat field yang bukan bagian dari data class yang bersangkutan. Field ini hanya dipakai sementara oleh beberapa fungsi. Kemudian field ini tidak pernah lagi digunakan.</p><p>SOLID Principle yang perlu dicek untuk smell ini adalah SRP (<a href="https://en.wikipedia.org/wiki/Single-responsibility_principle" target="_blank" rel="noopener noreferrer">Single-responsibility principle</a>). Kita perlu mempertimbangkan apakah field yang bersangkutan adalah field yang cocok menempati class tersebut.</p>',5),y=a("Lihat class "),h=a("BojekDriver.java"),_=t(`<div class="language-java"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">Vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Location</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shortestPath</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Location</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> paths </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Vector</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//complex A* algorithm code. using f, g, h variable</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> paths</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Disini dimisalkan ada driver yang perlu melakukan pencarian rute terdekat. Salah satu algoritma yang dapat digunakan untuk mencari rute adalah <a href="https://en.wikipedia.org/wiki/A*_search_algorithm" target="_blank" rel="noopener noreferrer">A*</a>. Seperti yang sudah Anda pelajari di matakuliah AI semester lalu, A* membutuhkan beberapa hal untuk beroperasi, misalnya adalah variabel f, g, h.</p><p>Di dalam class ini, bayangkan ketiga variabel itu akan digunakan di fungsi <code>shortestPath</code> dan juga di fungsi-fungsi private lainnya yang adalah hasil extract fungsi <code>shortestPath</code> (diekstrak agar tidak menimbulkan code smell <strong>Long Method</strong>).</p><p>BojekDriver seharusnya hanya memperdulikan data miliknya. Variabel f, g, dan h hanyalah temporary field untuk keperluan algoritma A*.</p><h2 id="penyelesaian" tabindex="-1">Penyelesaian <a class="header-anchor" href="#penyelesaian" aria-hidden="true">#</a></h2><p>Untuk contoh kasus ini, kita melakukan <a href="https://sourcemaking.com/refactoring/extract-class" target="_blank" rel="noopener noreferrer">Extract Class</a></p>`,6),u=a("Semua fungsi berkaitan dengan A* dan semua variabelnya kita usir ke class baru "),A=a("AStar.java"),g=a("."),D=a("Di class "),m=a("BojekDriver"),k=a(", fungsi "),C=s("code",null,"shortestPath",-1),f=a(" tetap ada, namun didelegasi ke class AStar."),F=t(`<div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">Vector&lt;Location&gt; shortestPath(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  return new AStar().shortestPath(current, destination);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,1);function b(v,S,T,P,j,E){const e=p("github-url");return i(),r("div",null,[d,s("p",null,[y,n(e,{to:"before/BojekDriver.java"},{default:l(()=>[h]),_:1})]),_,s("p",null,[u,n(e,{to:"after/AStar.java"},{default:l(()=>[A]),_:1}),g]),s("p",null,[D,n(e,{to:"after/BojekDriver.java"},{default:l(()=>[m]),_:1}),k,C,f]),F])}var w=o(c,[["render",b]]);export{V as __pageData,w as default};
